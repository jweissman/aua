#!/usr/bin/env aura

phi = 3.14

fun body(rank, color)
  baseline = 100
  tau_r = (color[1] + color[2]).to_i(16).to_f / baseline.to_f
  tau_g = (color[3] + color[4]).to_i(16).to_f / baseline.to_f
  tau_b = (color[5] + color[6]).to_i(16).to_f / baseline.to_f
  if rank == 1
    say("Color is ${color}; r: ${tau_r}, g: ${tau_g}, b: ${tau_b}")
  end
  {
    power: (phi * rank) + (tau_r * rank),
    toughness: (phi * rank) + (tau_g * rank),
    abilities: [],
    color: color
  }
end

fun creature_from_body(body)
  {
    name: body.name,
    hp: body.toughness,
    attack: body.power,
    defense: 0  # default baseline
  }
end

# fun hero_from_creature(creature)
# end

cards = [
  { name: 'archon alpha, the noblissimus', hp: 100, attack: 24, defense: 1 },
  { name: 'prince gulfregon, shield of ambria', hp: 250, attack: 15, defense: 2 },
  { name: 'tharn kallix, terraqueous worldmage', hp: 50, attack: 8, defense: 1 },
]

fun fight_one(attacker, defender)
  damage = attacker.attack - defender.defense
  damage = if damage < 0 then 0 else damage
  defender.hp = defender.hp - damage
  say("${attacker.name} hit ${defender.name} for ${damage} (at ${defender.hp})")
end

fun fight(red, blue)
  while red.hp > 0 && blue.hp > 0
    fight_one(red, blue)
    if blue.hp > 0
      fight_one(blue, red)
    end
  end
  victor = if red.hp > 0 then red else blue
  say "The winner is ${victor.name}."
end

say 'gathering two simulants from the multiverse'
alpha = cards.sample
beta = cards.sample
fight(alpha, beta)

